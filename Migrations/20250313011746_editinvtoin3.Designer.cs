// <auto-generated />
using System;
using EF_Project.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Project.Migrations
{
    [DbContext(typeof(ConnectorDBContext))]
    [Migration("20250313011746_editinvtoin3")]
    partial class editinvtoin3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Project.Entities.Audit_Tracking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte>("AddOrPull")
                        .HasColumnType("tinyint");

                    b.Property<int?>("From_Inv_To_Inv_ID")
                        .HasColumnType("int");

                    b.Property<int>("Item")
                        .HasColumnType("int");

                    b.Property<int?>("Pull_Order_Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("QuantityAfter")
                        .HasColumnType("int");

                    b.Property<int?>("Supply_Order_Id")
                        .HasColumnType("int");

                    b.Property<int>("Taregt_Inv")
                        .HasColumnType("int");

                    b.Property<DateTime>("Transaction_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("From_Inv_To_Inv_ID");

                    b.HasIndex("Item");

                    b.HasIndex("Pull_Order_Id");

                    b.HasIndex("Supply_Order_Id");

                    b.HasIndex("Taregt_Inv");

                    b.ToTable("AuditTable");
                });

            modelBuilder.Entity("EF_Project.Entities.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("EF_Project.Entities.From_Inv_to_Inv_Tracker", b =>
                {
                    b.Property<int>("Trs_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Trs_ID"));

                    b.Property<int>("Expire_Limit")
                        .HasColumnType("int");

                    b.Property<DateTime>("Production_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PullOrderId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplyOrderID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Trs_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("from")
                        .HasColumnType("int");

                    b.Property<int>("item")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("to")
                        .HasColumnType("int");

                    b.HasKey("Trs_ID");

                    b.HasIndex("PullOrderId");

                    b.HasIndex("SupplyOrderID");

                    b.HasIndex("from");

                    b.HasIndex("item");

                    b.HasIndex("to");

                    b.ToTable("InvToInvAudit");
                });

            modelBuilder.Entity("EF_Project.Entities.Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MangerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("EF_Project.Entities.InventoryItem", b =>
                {
                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUse")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("EF_Project.Entities.Item", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("SupplierID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EF_Project.Entities.PullOrder", b =>
                {
                    b.Property<int>("PullOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PullOrderId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.HasKey("PullOrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("InventoryId");

                    b.ToTable("PullOrders");
                });

            modelBuilder.Entity("EF_Project.Entities.PullOrederDetails", b =>
                {
                    b.Property<int>("PullOrederId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("PullOrederId", "ItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("pullOrederDetails");
                });

            modelBuilder.Entity("EF_Project.Entities.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSupplier");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("EF_Project.Entities.SupplyOrder", b =>
                {
                    b.Property<int>("SupplyOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplyOrderID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplyOrderID");

                    b.HasIndex("InventoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplyOrders");
                });

            modelBuilder.Entity("EF_Project.Entities.SupplyOrederDetails", b =>
                {
                    b.Property<int>("SupplyOrderId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ExperationInMonths")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProdunctionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("SupplyOrderId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("supplyOrederDetails");
                });

            modelBuilder.Entity("EF_Project.Entities.Audit_Tracking", b =>
                {
                    b.HasOne("EF_Project.Entities.From_Inv_to_Inv_Tracker", "From_Inv_To_Inv_Tracker_nav")
                        .WithMany("AuditTrackers")
                        .HasForeignKey("From_Inv_To_Inv_ID");

                    b.HasOne("EF_Project.Entities.Item", "item")
                        .WithMany("AuditTrackers")
                        .HasForeignKey("Item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.PullOrder", "pull_order_nav")
                        .WithMany("AuditTrackers")
                        .HasForeignKey("Pull_Order_Id");

                    b.HasOne("EF_Project.Entities.SupplyOrder", "supply_order_nav")
                        .WithMany("AuditTrackers")
                        .HasForeignKey("Supply_Order_Id");

                    b.HasOne("EF_Project.Entities.Inventory", "inventory")
                        .WithMany()
                        .HasForeignKey("Taregt_Inv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From_Inv_To_Inv_Tracker_nav");

                    b.Navigation("inventory");

                    b.Navigation("item");

                    b.Navigation("pull_order_nav");

                    b.Navigation("supply_order_nav");
                });

            modelBuilder.Entity("EF_Project.Entities.From_Inv_to_Inv_Tracker", b =>
                {
                    b.HasOne("EF_Project.Entities.PullOrder", null)
                        .WithMany("From_Inv_To_Inv_Tracker_nav")
                        .HasForeignKey("PullOrderId");

                    b.HasOne("EF_Project.Entities.SupplyOrder", null)
                        .WithMany("From_Inv_To_Inv_Tracker_nav")
                        .HasForeignKey("SupplyOrderID");

                    b.HasOne("EF_Project.Entities.Inventory", "from_inv_nav")
                        .WithMany("FromTransfers")
                        .HasForeignKey("from")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.Item", "item_nav")
                        .WithMany("From_Inv_To_Inv_Tracker_nav")
                        .HasForeignKey("item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.Inventory", "to_inv_nav")
                        .WithMany("ToTransfers")
                        .HasForeignKey("to")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("from_inv_nav");

                    b.Navigation("item_nav");

                    b.Navigation("to_inv_nav");
                });

            modelBuilder.Entity("EF_Project.Entities.InventoryItem", b =>
                {
                    b.HasOne("EF_Project.Entities.Inventory", "Inventory")
                        .WithMany("Items")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.Item", "Item")
                        .WithMany("Inventories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("EF_Project.Entities.Item", b =>
                {
                    b.HasOne("EF_Project.Entities.Supplier", "Supplier")
                        .WithMany("Items")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("EF_Project.Entities.PullOrder", b =>
                {
                    b.HasOne("EF_Project.Entities.Client", "client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.Inventory", "inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("inventory");
                });

            modelBuilder.Entity("EF_Project.Entities.PullOrederDetails", b =>
                {
                    b.HasOne("EF_Project.Entities.Item", "item")
                        .WithMany("PullOrderDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.PullOrder", "PullOrder")
                        .WithMany("PullOrderDetails")
                        .HasForeignKey("PullOrederId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.Supplier", "supplier")
                        .WithMany("PullOrderDetails")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PullOrder");

                    b.Navigation("item");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("EF_Project.Entities.SupplyOrder", b =>
                {
                    b.HasOne("EF_Project.Entities.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.Supplier", "supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("supplier");
                });

            modelBuilder.Entity("EF_Project.Entities.SupplyOrederDetails", b =>
                {
                    b.HasOne("EF_Project.Entities.Item", "Item")
                        .WithMany("SupplyOrederDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("EF_Project.Entities.SupplyOrder", "SupplyOrder")
                        .WithMany("supplyOrederDetails")
                        .HasForeignKey("SupplyOrderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("SupplyOrder");
                });

            modelBuilder.Entity("EF_Project.Entities.From_Inv_to_Inv_Tracker", b =>
                {
                    b.Navigation("AuditTrackers");
                });

            modelBuilder.Entity("EF_Project.Entities.Inventory", b =>
                {
                    b.Navigation("FromTransfers");

                    b.Navigation("Items");

                    b.Navigation("ToTransfers");
                });

            modelBuilder.Entity("EF_Project.Entities.Item", b =>
                {
                    b.Navigation("AuditTrackers");

                    b.Navigation("From_Inv_To_Inv_Tracker_nav");

                    b.Navigation("Inventories");

                    b.Navigation("PullOrderDetails");

                    b.Navigation("SupplyOrederDetails");
                });

            modelBuilder.Entity("EF_Project.Entities.PullOrder", b =>
                {
                    b.Navigation("AuditTrackers");

                    b.Navigation("From_Inv_To_Inv_Tracker_nav");

                    b.Navigation("PullOrderDetails");
                });

            modelBuilder.Entity("EF_Project.Entities.Supplier", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("PullOrderDetails");
                });

            modelBuilder.Entity("EF_Project.Entities.SupplyOrder", b =>
                {
                    b.Navigation("AuditTrackers");

                    b.Navigation("From_Inv_To_Inv_Tracker_nav");

                    b.Navigation("supplyOrederDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
